# vim: filetype=vim

sanitise tridactyllocal tridactylsync
"------------------------------------------------------------------------------
" Core settings
"------------------------------------------------------------------------------

{{- if eq .browser "ZEN" }}
set browser zen-browser
{{- else }}
set browser firefox
{{- end }}

" Vimperator-like hinting mode.
set hintfiltermode vimperator-reflow
set hintchars neiohtsrad
set hintuppercase false

" Open new tabs at the end of the tab list instead of after the current tab.
" (Remember to also set browser.tabs.insertRelatedAfterCurrent=false in
" about:config.)
set tabopenpos last
set relatedopenpos last

" Do not allow pages to focus elements for me.
" (Remember to also set browser.autofocus=false in about:config.)
set allowautofocus false

" Smooth scroll
set smoothscroll true

" Colorscheme
colourscheme tep

" Set editor to neovim
set editorcmd kitty nvim

" Defaults to 300ms but I'm a 'move fast and close the wrong tabs' kinda chap
set hintdelay 100

" Use wl-copy
set externalclipboardcmd wl-copy

" Equivalent to `set csp clobber` before it was removed. This weakens your
" defences against cross-site-scripting attacks and other types of
" code-injection by reducing the strictness of Content Security Policy on
" every site in a couple of ways.
" You may not wish to run this. Mozilla strongly feels that you shouldn't.
" It allows Tridactyl to function on more pages, e.g. raw GitHub pages.
" Read https://wiki.mozilla.org/Security/CSP#Goals for more information.
jsb browser.webRequest.onHeadersReceived.addListener(tri.request.clobberCSP,{urls:["<all_urls>"],types:["main_frame"]},["blocking","responseHeaders"])

" Inject Google Translate
" This (clearly) is remotely hosted code. Google will be sent the whole
" contents of the page you are on if you run `:translate`
" From https://github.com/jeremiahlee/page-translator
command translate js let googleTranslateCallback = document.createElement('script'); googleTranslateCallback.innerHTML = "function googleTranslateElementInit(){ new google.translate.TranslateElement(); }"; document.body.insertBefore(googleTranslateCallback, document.body.firstChild); let googleTranslateScript = document.createElement('script'); googleTranslateScript.charset="UTF-8"; googleTranslateScript.src = "https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit&tl=&sl=&hl="; document.body.insertBefore(googleTranslateScript, document.body.firstChild);

"------------------------------------------------------------------------------
" Key bindings
"------------------------------------------------------------------------------

" Before we begin, clear all user-defined commands.
comclear

" Previous/next tab.
bind J tabprev
bind K tabnext

" Find
bind / fillcmdline find
bind ? fillcmdline find --reverse
bind n findnext --search-from-view
bind N findnext --search-from-view --reverse
bind gn findselect
bind gN composite findnext --search-from-view --reverse; findselect
bind ,<Space> nohlsearch

" Close tab
unbind d
bind x tabclose

" Backward/forward in history.
bind h back
bind l forward

" Scroll line
bind j scrollline 5
bind k scrollline -5

" Scroll page
bind { scrollpage -0.7
bind } scrollpage 0.7

" Handy multiwindow/multitasking binds
bind gd tabdetach
bind gD composite tabduplicate; tabdetach

" Make yy use canonical / short links on the 5 websites that support them
bind yy clipboard yankcanon

" Open the selection with tabopen
bind --mode=visual t composite js document.getSelection().toString() | fillcmdline tabopen

" Stupid workaround to let hint -; be used with composite which steals semi-colons
command hint_focus hint -;
" Open right click menu on links
bind ;C composite hint_focus; !s wtype -P Menu

" Open videos in MPV
alias mpv js -p tri.excmds.shellescape(JS_ARG).then(url => tri.excmds.exclaim_quiet('mpv --no-terminal --ytdl ' + url))
bind ,v composite js document.location.href | mpv
bind ;v composite hint -W mpv

" Git{Hub,Lab} git clone via SSH yank
bind yg composite js "git clone " + document.location.href.replace(/https?:\/\//,"git@").replace("/",":").replace(/$/,".git") | clipboard yank
 
" As above but execute it and open terminal in folder
bind ,g js let uri = document.location.href.replace(/https?:\/\//,"git@").replace("/",":").replace(/$/,".git"); tri.native.run("cd ~/Documents; git clone " + uri + "; cd \"$(basename \"" + uri + "\" .git)\"; st")

" Use Firefox default keybind
" search
unbind <C-f>
" select all
unbind <C-a>
" copy in the commandline
unbind --mode=ex <C-c>
" Allow Ctrl-a to select all in the commandline
unbind --mode=ex <C-a>

"------------------------------------------------------------------------------
" Website specific
"------------------------------------------------------------------------------

" Ignore sites
blacklistadd teams.microsoft.com
blacklistadd atlassian.net

" Super ignore sites
seturl https://console.cloud.google.com/bigquery superignore true

" New reddit is bad
autocmd DocStart ^http(s?)://www.reddit.com js tri.excmds.urlmodify("-t", "www", "old")

" Comment toggler for Reddit, Hacker News and Lobste.rs
bind ;c hint -Jc [class*="expand"],[class="togg"],[class="comment_folder"]

" Take back to subreddit from comments
bindurl reddit.com gu urlparent 4

" Only hint search results on Google and DDG
bindurl www.google.com ;f hint -Jc #search a
bindurl www.google.com ;F hint -Jbc #search a

" Make `gi` on GitHub take you to the search box
bindurl ^https://github.com gi hint -Vc .AppHeader-searchButton

" Isolate Facebook in its own container
set auconcreatecontainer true
autocontain facebook\.com facebook

"------------------------------------------------------------------------------
" Search engines
"------------------------------------------------------------------------------
set searchurls.ddg https://duckduckgo.com/?q=%s
set searchurls.gg https://www.google.com/search?q=%s
set searchurls.yt https://www.youtube.com/results?search_query=%s
set searchurls.w https://en.wikipedia.org/w/index.php?search=%s&title=Special%3ASearch
set searchurls.gh https://github.com/search?utf8=%E2%9C%93&q=%s&ref=simplesearch
set searchurls.glab https://gitlab.com/search?utf8=%E2%9C%93&search=%s
